@* @page "/showID/{showId}"

@using Microsoft.AspNetCore.Authorization
@using RateAndReview.Client.Models
@using RateAndReview.Client.Services;

@inject RapidApiService RapidApiService
@inject HttpClient httpClient
@inject NavigationManager NavigationManager

<PageTitle>Greg</PageTitle>

<div class="page">
    <div class="showInfoContainer">
        <div class="showInfoFirst">
            <div class="showImageContainer">
                <img class="showImage" src="https://m.media-amazon.com/images/M/MV5BZGEwYmMwZmMtMTQ3MS00YWNhLWEwMmQtZTU5YTIwZmJjZGQ0XkEyXkFqcGdeQXVyMTI5MzA5MjA1._V1_.jpg"/>
            </div>
            <div class="showTitle">
                The Falcon and the Winter Soldier
            </div>
        </div>
        <div class="showInfoSecond">
            <AuthorizeView>
                <Authorized>
                    <button class="btn btn-primary">Write Review</button>
                </Authorized>
                <NotAuthorized>
                    <NavLink class="" href="Account/Login">
                        <button class="btn btn-secondary">Sign in to review show</button>
                    </NavLink>
                </NotAuthorized>
            </AuthorizeView>

            <div style="height: 40px;"></div>
            <div class="reviewContainer">
                <div class="reviewInfo">
                    <div class="reviewAuthor">
                        Review by: Gregarious
                    </div>
                    <div class="reviewDate">
                        4/23/2021
                    </div>
                </div>
                <div class="reviewMessage">
                    Azure Cosmos DB: While you can use some MongoDB features like querying JSON documents through its API, it's not a full-fledged drop-in replacement for MongoDB. You might need to adapt your code and queries if migrating from an existing MongoDB database.
                </div>
                <div class="reviewOptions">
                    <button>Upvote</button>
                    <button>Downvote</button>
                </div>
            </div>
            <div style="height: 20px;"></div>
            <div class="reviewContainer">
                <div class="reviewAuthor">
                    Review by: Gregarious
                </div>
                <div class="reviewMessage">
                    Azure Cosmos DB: While you can use some MongoDB features like querying JSON documents through its API, it's not a full-fledged drop-in replacement for MongoDB. You might need to adapt your code and queries if migrating from an existing MongoDB database.
                </div>
                <div class="reviewOptions">
                    <button>Upvote</button>
                    <button>Downvote</button>
                </div>
            </div>
            <div style="height: 20px;"></div>
            <div class="reviewContainer">
                <div class="reviewAuthor">
                    Review by: Gregarious
                </div>
                <div class="reviewMessage">
                    Azure Cosmos DB: While you can use some MongoDB features like querying JSON documents through its API, it's not a full-fledged drop-in replacement for MongoDB. You might need to adapt your code and queries if migrating from an existing MongoDB database.
                </div>
                <div class="reviewOptions">
                    <button>Upvote</button>
                    <button>Downvote</button>
                </div>
            </div>

            <h1>Hello this is: @showId</h1>
            <h1>This: @Shows</h1>
            
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string? showId { get; set; }

    private List<Show> Shows;

    protected override async Task OnInitializedAsync()
    {
        // Shows = await httpClient.GetFromJsonAsync<List<Show>>("api/show");
        var movie = await RapidApiService.GetMediaDetails(showId);
        Console.WriteLine(movie);
    }


}
 *@